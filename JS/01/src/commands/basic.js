const { MessageEmbed , MessageButton, MessageActionRow } = require('discord.js')
const { readdirSync } = require('fs')

module.exports = [
    {
        name: "help",
        aliases: ["h"],
        category: "basic",
        information: "‡∏´‡∏ô‡πâ‡∏≤‡∏ä‡πà‡∏ß‡∏¢‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡∏Ç‡∏≠‡∏á‡∏ö‡∏≠‡∏ó",
        async run(client, message) {
            try {
                const homeButton = new MessageButton({
                    style: 'SUCCESS',
                    emoji: "‚öì",
                    label: "‡∏´‡∏ô‡πâ‡∏≤‡∏´‡∏•‡∏±‡∏Å",
                    customId: "home"
                })
                const basicButton = new MessageButton({
                    style: 'SECONDARY',
                    emoji: "üè†",
                    label: "‡∏ó‡∏±‡πà‡∏ß‡πÑ‡∏õ",
                    customId: "basic"
                })
                const musicButton = new MessageButton({
                    style: 'SECONDARY',
                    emoji: "üéµ",
                    label: "‡πÄ‡∏û‡∏•‡∏á",
                    customId: "music"
                })
                const gameButton = new MessageButton({
                    style: 'SECONDARY',
                    emoji: "üéÆ",
                    label: "‡πÄ‡∏Å‡∏°",
                    customId: "game"
                })
                const rateButton = new MessageButton({
                    style: 'SECONDARY',
                    emoji: "üîû",
                    label: "18+",
                    customId: "rate"
                })
                const guild_settingsButton = new MessageButton({
                    style: 'SECONDARY',
                    emoji: "‚öôÔ∏è",
                    label: "‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤",
                    customId: "guild_settings"
                })
                const developerButton = new MessageButton({
                    style: 'SECONDARY',
                    emoji: "üßë‚Äçüíª",
                    label: "‡∏ú‡∏π‡πâ‡∏û‡∏±‡∏í‡∏ô‡∏≤",
                    customId: "developer"
                })
                const guild_adminButton = new MessageButton({
                    style: 'SECONDARY',
                    emoji: "üîí",
                    label: "‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô‡∏î‡∏¥‡∏™",
                    customId: "guild_admin"
                })
                const bot_adminButton = new MessageButton({
                    style: 'SECONDARY',
                    emoji: "‚öì",
                    label: "‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô‡∏ö‡∏≠‡∏ó",
                    customId: "bot_admin"
                })

                const components1 = new MessageActionRow({components: [homeButton, basicButton, musicButton, gameButton]})
                const components2 = new MessageActionRow({components: [rateButton, guild_settingsButton, developerButton, guild_adminButton]})
                if (client.function.main.isAdmin(client, message.author.id)) components2.components.push(bot_adminButton)

                const mainEmbed = new MessageEmbed({
                    author: {
                        icon_url: client.user.avatarURL(),
                        name: "‡∏™‡∏ß‡∏±‡∏™‡∏î‡∏µ‡∏Ñ‡πà‡∏∞! ‡∏°‡∏µ‡∏≠‡∏∞‡πÑ‡∏£‡πÉ‡∏´‡πâ‡∏ä‡πà‡∏ß‡∏¢‡πÑ‡∏´‡∏°‡∏Ñ‡∏∞?",
                        url: client.config.embed_author_url
                    },
                    title: "‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏î‡∏π‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡πÑ‡∏î‡πâ‡∏ó‡∏µ‡πà‡πÄ‡∏°‡∏ô‡∏π‡∏î‡πâ‡∏≤‡∏ô‡∏•‡πà‡∏≤‡∏á‡πÄ‡∏•‡∏¢‡∏Ñ‡πà‡∏∞",
                    image: {
                        url: client.config.help_image
                    },
                    color: 0x00ffff
                })

                async function generateEmbed(category) {
                    let word = client.user.username
                    if (category === "basic") word = "‡∏ô‡∏µ‡πà‡∏Ñ‡∏∑‡∏≠‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ó‡∏±‡πà‡∏ß‡πÑ‡∏õ‡∏Ç‡∏≠‡∏á‡∏ö‡∏≠‡∏ó‡∏Ñ‡πà‡∏∞!"
                    if (category === "music") word = "‡∏ô‡∏µ‡πà‡∏Ñ‡∏∑‡∏≠‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡πÉ‡∏ô‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡πÄ‡∏û‡∏•‡∏á‡∏Ç‡∏≠‡∏á‡∏ö‡∏≠‡∏ó‡∏Ñ‡πà‡∏∞"
                    if (category === "game") word = "‡∏ô‡∏µ‡πà‡∏Ñ‡∏∑‡∏≠‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡πÉ‡∏ô‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡πÄ‡∏Å‡∏°‡∏Ñ‡πà‡∏∞"
                    if (category === "guild_settings") word = "‡∏ô‡∏µ‡πà‡∏Ñ‡∏∑‡∏≠‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡πÉ‡∏ô‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå‡∏Ñ‡πà‡∏∞"
                    if (category === "developer") word = "‡∏ô‡∏µ‡πà‡∏Ñ‡∏∑‡∏≠‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡πÉ‡∏ô‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏ú‡∏π‡πâ‡∏û‡∏±‡∏í‡∏ô‡∏≤‡∏Ñ‡πà‡∏∞"
                    if (category === "guild_admin") word = "‡∏ô‡∏µ‡πà‡∏Ñ‡∏∑‡∏≠‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡πÉ‡∏ô‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå‡∏Ñ‡πà‡∏∞"
                    if (category === "bot_admin") word = "‡∏ô‡∏µ‡πà‡∏Ñ‡∏∑‡∏≠‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡πÉ‡∏ô‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô‡∏Ç‡∏≠‡∏á‡∏ö‡∏≠‡∏ó‡∏Ñ‡πà‡∏∞"
                    const prefix = await client.function.main.get_prefix(client, message)
                    return new MessageEmbed({
                        author: {
                            icon_url: client.user.avatarURL(),
                            name: word,
                            url: client.config.embed_author_url
                        },
                        description: client.commands.filter(cm => cm.category === category).map(cm => `**${prefix + cm.name}** - ${cm.information}`).join("\n"),
                        color: 0x00ffff
                    })
                }

                message.loading.edit({embeds:[mainEmbed], components: [components1, components2]})

                message.loading.createMessageComponentCollector({
                    filter: ({ user }) => user.id === message.author.id, time: 30 * 60000
                }).on("collect", interaction => {
                    if (interaction.customId === "home") interaction.update({embeds: [mainEmbed], components: [components1, components2]})
                    readdirSync("./src/commands").map(f => f.replace(".js", "")).forEach(async category => {
                        if (interaction.customId === category) interaction.update({embeds:[await generateEmbed(category)], components: [components1, components2]})
                    })
                })

            } catch (e) {
                client.function.main.error_log(e, client, message)
            }
        }
    },
    {
        name: "horoscope",
        aliases: ["horo"],
        category: "basic",
        information: "‡∏≠‡∏¢‡∏≤‡∏Å‡∏ñ‡∏≤‡∏°‡∏≠‡∏∞‡πÑ‡∏£‡∏ñ‡∏≤‡∏°‡∏°‡∏≤‡πÑ‡∏î‡πâ‡πÄ‡∏•‡∏¢‡∏ô‡∏∞‡∏Ñ‡∏∞ ‡∏â‡∏±‡∏ô‡∏à‡∏∞‡∏ó‡∏≥‡∏ô‡∏≤‡∏¢‡πÉ‡∏´‡πâ‡∏Ñ‡∏∏‡∏ì‡πÄ‡∏≠‡∏á‡∏Ñ‡πà‡∏∞!",
        async run(client, message, args) {
            try {
                if (!args[0]) return message.loading.edit({embeds:[
                    new MessageEmbed({
                        author: {
                            icon_url: client.user.avatarURL(),
                            name: "‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£‡πÑ‡∏î‡πâ‡∏Ñ‡πà‡∏∞!",
                            url: client.config.embed_author_url
                        },
                        title: "‡∏Ñ‡∏∏‡∏ì‡∏ï‡πâ‡∏≠‡∏á‡∏£‡∏∞‡∏ö‡∏∏‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°‡∏ó‡∏µ‡πà‡∏à‡∏∞‡∏ñ‡∏≤‡∏°‡∏î‡πâ‡∏ß‡∏¢‡∏ô‡∏∞‡∏Ñ‡∏∞",
                        color: 0x00ffff
                    })
                ]})
                message.loading.edit({embeds:[
                    new MessageEmbed({
                        author: {
                            name: `‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°‡∏à‡∏≤‡∏Å ${message.author.tag}`,
                            icon_url: message.author.displayAvatarURL({dynamic: true})
                        },
                        fields: [
                            {
                                name: '‡∏ñ‡∏≤‡∏°‡∏ß‡πà‡∏≤ :',
                                value: args.join(" ")
                            },
                            {
                                name: '‡∏Ñ‡∏≥‡∏ï‡∏≠‡∏ö',
                                value: client.function.main.random_choice([
                                    "‡πÅ‡∏ô‡πà‡∏ô‡∏≠‡∏ô‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß‡∏Ñ‡πà‡∏≤",
                                    "‡∏Å‡πá‡∏ô‡πà‡∏≤‡∏à‡∏∞‡πÄ‡∏õ‡πá‡∏ô‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏ô‡∏±‡πâ‡∏ô‡∏ô‡∏∞‡∏Ñ‡∏∞",
                                    "‡πÇ‡∏î‡∏¢‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏Å‡∏±‡∏á‡∏Ç‡∏≤‡πÄ‡∏•‡∏¢‡∏Ñ‡πà‡∏∞!",
                                    "‡πÉ‡∏ä‡πà‡πÅ‡∏ô‡πà‡∏ô‡∏≠‡∏ô‡∏Ñ‡πà‡∏≤‡∏≤",
                                    "‡∏Ñ‡∏∏‡∏ì‡∏≠‡∏≤‡∏à‡∏û‡∏∂‡πà‡∏á‡∏û‡∏≤‡∏°‡∏±‡∏ô‡πÑ‡∏î‡πâ‡∏ô‡∏∞‡∏Ñ‡∏∞",
                                    "‡πÄ‡∏ó‡πà‡∏≤‡∏ó‡∏µ‡πà‡πÄ‡∏Ñ‡πâ‡∏≤‡πÄ‡∏´‡πá‡∏ô ‡πÄ‡∏Ñ‡πâ‡∏≤‡∏ß‡πà‡∏≤‡πÉ‡∏ä‡πà‡∏ô‡πâ‡∏≤",
                                    "‡∏´‡∏±‡∏ß‡πÉ‡∏à‡∏Ç‡∏≠‡∏á‡∏â‡∏±‡∏ô..‡∏°‡∏±‡∏ô‡∏ö‡∏≠‡∏Å‡∏ß‡πà‡∏≤‡πÉ‡∏ä‡πà‡∏Ñ‡πà‡∏∞!",
                                    "‡πÄ‡∏õ‡πá‡∏ô‡πÑ‡∏õ‡πÑ‡∏î‡πâ‡∏™‡∏∏‡∏î‡πÜ‡πÄ‡∏•‡∏¢‡∏Ñ‡πà‡∏≤‡∏≤",
                                    "‡∏Å‡πá‡∏î‡∏π‡∏ó‡πà‡∏≤‡∏à‡∏∞‡∏î‡∏µ‡∏ô‡∏∞‡∏Ñ‡∏∞",
                                    "‡πÉ‡∏ä‡πà‡∏Ñ‡πà‡∏≤",
                                    "‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ó‡∏≤‡∏á‡∏ó‡∏µ‡πà‡∏Ñ‡∏∏‡∏ì‡∏≠‡∏¢‡∏≤‡∏Å‡∏î‡∏µ‡∏Å‡∏ß‡πà‡∏≤‡∏ô‡∏∞‡∏Ñ‡∏∞",
                                    "‡∏≠‡∏∞‡πÑ‡∏£‡∏ô‡∏∞‡∏Ñ‡∏∞‡πÑ‡∏°‡πà‡πÄ‡∏Ç‡πâ‡∏≤‡πÉ‡∏à ‡∏Ç‡∏≠‡∏≠‡∏µ‡∏Å‡∏£‡∏≠‡∏ö‡πÑ‡∏î‡πâ‡πÑ‡∏´‡∏°‡∏Ñ‡∏∞?",
                                    "‡πÑ‡∏ß‡πâ‡∏°‡∏≤‡∏ñ‡∏≤‡∏°‡πÉ‡∏´‡∏°‡πà‡∏ó‡∏µ‡∏´‡∏•‡∏±‡∏á‡∏ô‡∏∞‡∏Ñ‡∏∞..",
                                    "‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏°‡πà‡∏Ñ‡∏ß‡∏£‡∏£‡∏π‡πâ‡∏ï‡∏≠‡∏ô‡∏ô‡∏µ‡πâ‡∏à‡∏∞‡∏î‡∏µ‡∏Å‡∏ß‡πà‡∏≤‡∏ô‡∏∞‡∏Ñ‡∏∞..555",
                                    "‡∏≠‡∏±‡∏ô‡∏ô‡∏µ‡πâ‡∏â‡∏±‡∏ô‡πÑ‡∏°‡πà‡∏£‡∏π‡πâ‡∏à‡∏£‡∏¥‡∏á‡πÜ‡∏Ñ‡πà‡∏∞",
                                    "‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡πÄ‡∏£‡∏µ‡∏¢‡∏á‡∏Ñ‡∏≥‡∏û‡∏π‡∏î‡∏î‡∏µ‡πÜ ‡πÅ‡∏•‡πâ‡∏ß‡∏Ç‡∏≠‡∏≠‡∏µ‡∏Å‡∏£‡∏≠‡∏ö‡πÑ‡∏î‡πâ‡πÑ‡∏´‡∏°‡∏Ñ‡∏∞‡∏∞",
                                    "‡∏≠‡∏¢‡πà‡∏≤‡πÑ‡∏õ‡∏ô‡∏±‡∏ö‡∏°‡∏±‡∏ô‡πÄ‡∏•‡∏¢‡∏Ñ‡πà‡∏∞",
                                    "‡∏â‡∏±‡∏ô‡∏Ñ‡∏¥‡∏î‡∏ß‡πà‡∏≤‡πÑ‡∏°‡πà‡∏ô‡∏∞‡∏Ñ‡∏∞",
                                    "‡∏´‡∏±‡∏ß‡πÉ‡∏à‡∏Ç‡∏≠‡∏á‡∏â‡∏±‡∏ô..‡∏°‡∏±‡∏ô‡∏ö‡∏≠‡∏Å‡∏ß‡πà‡∏≤‡πÑ‡∏°‡πà‡∏Ñ‡πà‡∏∞",
                                    "‡∏î‡∏π‡∏ó‡πà‡∏≤‡πÑ‡∏°‡πà‡∏Ñ‡πà‡∏≠‡∏¢‡∏à‡∏∞‡∏î‡∏µ‡πÄ‡∏•‡∏¢‡∏ô‡∏∞‡∏Ñ‡∏∞",
                                    "‡πÅ‡∏¢‡πà‡∏°‡∏≤‡∏Å‡πÄ‡∏•‡∏¢‡∏Ñ‡πà‡∏∞.."  
                                ])
                            }
                        ],
                        color: 0x00ffff
                    })
                ]})
            } catch (e) {
                client.function.main.error_log(e, client, message)
            }
        }
    },
    {
        name: "menu",
        aliases: ["‡∏Å‡∏¥‡∏ô‡∏≠‡∏∞‡πÑ‡∏£‡∏î‡∏µ"],
        category: "basic",
        information: "‡πÑ‡∏°‡πà‡∏£‡∏π‡πâ‡∏à‡∏∞‡∏Å‡∏¥‡∏ô‡∏≠‡∏∞‡πÑ‡∏£‡∏î‡∏µ‡∏á‡∏±‡πâ‡∏ô‡∏´‡∏£‡∏∑‡∏≠‡∏Ñ‡∏∞? ‡∏•‡∏≠‡∏á‡πÉ‡∏ä‡πâ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ô‡∏µ‡πâ‡∏î‡∏π‡πÑ‡∏î‡πâ‡πÄ‡∏•‡∏¢‡∏Ñ‡πà‡∏∞!",
        async run(client, message) {
            try {
                const menu = await get_menu_random(client)
                const pic = client.function.main.random_choice(JSON.parse(menu.pic))
                message.loading.edit({embeds:[
                    new MessageEmbed({
                        author: {
                            icon_url: client.user.avatarURL(),
                            name: `‡∏•‡∏≠‡∏á "${menu.menu}" ‡∏°‡∏±‡πâ‡∏¢‡∏Ñ‡∏∞?`,
                            url: pic.source
                        },
                        image: {
                            url: pic.url
                        },
                        color: 0x00ffff
                    })
                ]})

            } catch (e) {
                client.function.main.error_log(e, client, message)
            }
        }
    },
    {
        name: "shake",
        category: "basic",
        information: "‡πÄ‡∏Ç‡∏¢‡πà‡∏≤‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ (‡πÄ‡∏≠‡∏≤‡πÑ‡∏ß‡πâ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ô‡∏≠‡∏∞‡πÑ‡∏£‡∏á‡∏µ‡πâ‡∏Ñ‡πà‡∏∞)",
        async run(client, message, args) {
            try {
                if (!args[0]) return message.loading.edit({embeds:[
                    new MessageEmbed({
                        author: {
                            icon_url: client.user.avatarURL(),
                            name: "‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£‡πÑ‡∏î‡πâ‡∏Ñ‡πà‡∏∞!",
                            url: client.config.embed_author_url
                        },
                        title: "‡πÇ‡∏õ‡∏£‡∏î‡∏£‡∏∞‡∏ö‡∏∏‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏à‡∏∞‡πÉ‡∏´‡πâ Shake ‡∏î‡πâ‡∏ß‡∏¢‡∏ô‡∏∞‡∏Ñ‡∏∞",
                        color: 0x00ffff
                    })
                ]})
                const member = message.mentions.members.first()

                if (member.bot) return message.loading.edit({embeds:[
                    new MessageEmbed({
                        author: {
                            icon_url: client.user.avatarURL(),
                            name: "‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£‡πÑ‡∏î‡πâ‡∏Ñ‡πà‡∏∞!",
                            url: client.config.embed_author_url
                        },
                        title: `‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ Shake ‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏ó‡∏µ‡πà‡πÄ‡∏õ‡πá‡∏ô‡∏ö‡∏≠‡∏ó‡πÑ‡∏î‡πâ‡∏ô‡∏∞‡∏Ñ‡∏∞`,
                        color: 0x00ffff
                    })
                ]})

                let channel_default = member.voice.channel

                if (!channel_default) return message.loading.edit({embeds:[
                    new MessageEmbed({
                        author: {
                            icon_url: client.user.avatarURL(),
                            name: "‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£‡πÑ‡∏î‡πâ‡∏Ñ‡πà‡∏∞!",
                            url: client.config.embed_author_url
                        },
                        title: `\`${member.user.username}#${member.user.discriminator}\` ‡πÄ‡∏´‡∏°‡∏∑‡∏≠‡∏ô‡∏à‡∏∞‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡∏ä‡πà‡∏≠‡∏á‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡∏ô‡∏∞‡∏Ñ‡∏∞`,
                        color: 0x00ffff
                    })
                ]})

                let channels = []
                message.guild.channels.cache.forEach((channel) => {
                    if (channel.permissionsFor(member).has("CONNECT") && channel.type == "GUILD_VOICE") {
                        channels.push(channel)
                    }
                })

                message.loading.edit({embeds:[
                    new MessageEmbed({
                        author: {
                            icon_url: client.user.avatarURL(),
                            name: "‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÄ‡∏Ç‡∏¢‡πà‡∏≤‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ..",
                            url: client.config.embed_author_url
                        },
                        title: `‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÄ‡∏Ç‡∏¢‡πà‡∏≤ \`${member.user.username}#${member.user.discriminator}\``,
                        color: 0x00ffff
                    })
                ]})

                for (let i = 0; i < 4; i++) {
                    await member.voice.setChannel(channels[i])
                }
                await member.voice.setChannel(channel_default)

                message.loading.edit({embeds:[
                    new MessageEmbed({
                        author: {
                            icon_url: client.user.avatarURL(),
                            name: "‡πÄ‡∏Ç‡∏¢‡πà‡∏≤‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ ‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡∏Ñ‡πà‡∏∞!",
                            url: client.config.embed_author_url
                        },
                        title: `‡πÄ‡∏Ç‡∏¢‡πà‡∏≤ \`${member.user.username}#${member.user.discriminator}\` ‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡∏Ñ‡πà‡∏∞!`,
                        color: 0x00ffff
                    })
                ]})

            } catch (e) {
                client.function.main.error_log(e, client, message)
            }
        }
    },
    {
        name: "picsearch",
        aliases: ["pic"],
        category: "basic",
        information: "‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û",
        async run(client, message, args) {
            try {
                if (!args[0]) return message.loading.edit({embeds:[
                    new MessageEmbed({
                        author: {
                            icon_url: client.user.avatarURL(),
                            name: "‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£‡πÑ‡∏î‡πâ‡∏Ñ‡πà‡∏∞!",
                            url: client.config.embed_author_url
                        },
                        title: "‡πÇ‡∏õ‡∏£‡∏î‡∏£‡∏∞‡∏ö‡∏∏‡∏Ñ‡∏≥‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏à‡∏∞‡πÉ‡∏´‡πâ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏î‡πâ‡∏ß‡∏¢‡∏ô‡∏∞‡∏Ñ‡∏∞",
                        description: `‡πÄ‡∏ä‡πà‡∏ô \`${await client.function.main.get_prefix(client, message)}ps ‡∏û‡∏¥‡∏ã‡∏ã‡πà‡∏≤\``,
                        color: 0x00ffff
                    })
                ]})
                const res = await client.function.api.getimgurls(client, args.join(" "), 3)
                message.loading.edit({embeds:[
                    new MessageEmbed({
                        author: {
                            icon_url: client.user.avatarURL(),
                            name: `‡∏ô‡∏µ‡πà‡∏Ñ‡∏∑‡∏≠‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏Ç‡∏≠‡∏á "${args.join(" ")}" ‡∏Ñ‡πà‡∏∞!`,
                            url: client.config.embed_author_url
                        },
                        title: res.data[0].title,
                        url: res.data[0].source,
                        image: {
                            url: res.data[0].url
                        },
                        footer: {
                            text: "API response : " + res.ms.toLocaleString() + " ms"
                        },
                        color: 0x00ffff
                    })
                ]})
            } catch (e) {
                client.function.main.error_log(e, client, message)
            }
        }
    },
    {
        name: "covid",
        category: "basic",
        information: "‡∏î‡∏π‡∏™‡∏ñ‡∏≤‡∏ô‡∏Å‡∏≤‡∏£‡∏ì‡πå Covid-19 ‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î‡∏Ç‡∏≠‡∏á‡πÑ‡∏ó‡∏¢",
        async run(client, message) {
            try {
                const res = await client.function.api.covid()
                message.loading.edit({embeds:[
                    new MessageEmbed({
                        author: {
                            icon_url: client.user.avatarURL(),
                            name: "‡∏ô‡∏µ‡πà‡∏Ñ‡∏∑‡∏≠‡∏™‡∏ñ‡∏≤‡∏ô‡∏Å‡∏≤‡∏£‡∏ì‡πå‡πÇ‡∏Ñ‡∏ß‡∏¥‡∏î‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î‡∏Ç‡∏≠‡∏á‡πÑ‡∏ó‡∏¢‡∏ß‡∏±‡∏ô‡∏ô‡∏µ‡πâ‡∏Ñ‡πà‡∏∞",
                            url: "https://covid19.ddc.moph.go.th/api/Cases/today-cases-all"
                        },
                        title: `‡∏ï‡∏¥‡∏î‡πÄ‡∏ä‡∏∑‡πâ‡∏≠‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ß‡∏±‡∏ô‡∏ô‡∏µ‡πâ \`${res.data[0].new_case.toLocaleString()}\` ‡∏Ñ‡∏ô`,
                        fields: [
                            {
                                name: `‡∏´‡∏≤‡∏¢‡∏õ‡πà‡∏ß‡∏¢‡∏ß‡∏±‡∏ô‡∏ô‡∏µ‡πâ \`${res.data[0].new_recovered.toLocaleString()}\` ‡∏Ñ‡∏ô`,
                                value:
                                    `‡∏´‡∏≤‡∏¢‡∏õ‡πà‡∏ß‡∏¢‡∏™‡∏∞‡∏™‡∏° \`${res.data[0].total_recovered.toLocaleString()}\` ‡∏Ñ‡∏ô` + "\n" +
                                    `‡∏õ‡πà‡∏ß‡∏¢‡∏™‡∏∞‡∏™‡∏° \`${res.data[0].total_case.toLocaleString()}\` ‡∏Ñ‡∏ô` + "\n" +
                                    `‡πÄ‡∏™‡∏µ‡∏¢‡∏ä‡∏µ‡∏ß‡∏¥‡∏ï‡πÄ‡∏û‡∏¥‡πà‡∏° \`${res.data[0].new_death.toLocaleString()}\` ‡∏Ñ‡∏ô` + "\n"
                            }
                        ],
                        footer: {
                            text: `‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ï‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î ${res.data[0].update_date} | API response : ${res.ms.toLocaleString()} ms`
                        },
                        color: 0x00ffff
                    })
                ]})
            } catch (e) {
                client.function.main.error_log(e, client, message)
            }
        }
    },
    {
        name: "time",
        aliases: ["date"],
        category: "basic",
        information: "‡∏î‡∏π‡∏ß‡∏±‡∏ô‡πÅ‡∏•‡∏∞‡πÄ‡∏ß‡∏•‡∏≤ ‡∏ì ‡∏Ç‡∏ì‡∏∞‡∏ô‡∏µ‡πâ‡∏Ñ‡πà‡∏∞!",
        async run(client, message) {
            try {
                const today = new Date()

                message.loading.edit({embeds:[
                    new MessageEmbed({
                        author: {
                            icon_url: client.user.avatarURL(),
                            name: `${
                                (String(today.getHours()).length < 2 ? "0" + today.getHours() : today.getHours()) + ":" +
                                (String(today.getMinutes()).length < 2 ? "0" + today.getMinutes() : today.getMinutes()) + ":" +
                                (String(today.getSeconds()).length < 2 ? "0" + today.getSeconds() : today.getSeconds())
                            } | ‡∏Ç‡∏ì‡∏∞‡∏ô‡∏µ‡πâ‡πÄ‡∏ß‡∏•‡∏≤ ${
                                String(today.getHours()).length < 2 ? "0" + today.getHours() : today.getHours()
                            } ‡∏ô‡∏≤‡∏¨‡∏¥‡∏Å‡∏≤ ${
                                String(today.getMinutes()).length < 2 ? "0" + today.getMinutes() : today.getMinutes()
                            } ‡∏ô‡∏≤‡∏ó‡∏µ ${
                                String(today.getSeconds()).length < 2 ? "0" + today.getSeconds() : today.getSeconds()
                            } ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ ‡∏Ñ‡πà‡∏∞!`,
                            url: client.config.embed_author_url
                        },
                        description: `${
                            today.getDate() + '/' +
                            (today.getMonth()+1) + '/' +
                            today.getFullYear()
                        } | ‡∏ß‡∏±‡∏ô${
                            ["‡∏≠‡∏≤‡∏ó‡∏¥‡∏ï‡∏¢‡πå","‡∏à‡∏±‡∏ô‡∏ó‡∏£‡πå","‡∏≠‡∏±‡∏á‡∏Ñ‡∏≤‡∏£","‡∏û‡∏∏‡∏ò","‡∏û‡∏§‡∏´‡∏±‡∏™","‡∏®‡∏∏‡∏Å‡∏£‡πå","‡πÄ‡∏™‡∏≤‡∏£‡πå"][today.getDay()]
                        } ‡∏ó‡∏µ‡πà ${
                            today.getDate()
                        } ‡πÄ‡∏î‡∏∑‡∏≠‡∏ô${
                            ["‡∏°‡∏Å‡∏£‡∏≤‡∏Ñ‡∏°","‡∏Å‡∏∏‡∏°‡∏†‡∏≤‡∏û‡∏±‡∏ô‡∏ò‡πå","‡∏°‡∏µ‡∏ô‡∏≤‡∏Ñ‡∏°","‡πÄ‡∏°‡∏©‡∏≤‡∏¢‡∏ô","‡∏û‡∏§‡∏©‡∏†‡∏≤‡∏Ñ‡∏°","‡∏°‡∏¥‡∏ñ‡∏∏‡∏ô‡∏≤‡∏¢‡∏ô", "‡∏Å‡∏£‡∏Å‡∏é‡∏≤‡∏Ñ‡∏°","‡∏™‡∏¥‡∏á‡∏´‡∏≤‡∏Ñ‡∏°","‡∏Å‡∏±‡∏ô‡∏¢‡∏≤‡∏¢‡∏ô","‡∏ï‡∏∏‡∏•‡∏≤‡∏Ñ‡∏°","‡∏û‡∏§‡∏®‡∏à‡∏¥‡∏Å‡∏≤‡∏¢‡∏ô","‡∏ò‡∏±‡∏ô‡∏ß‡∏≤‡∏Ñ‡∏°"][today.getMonth()]
                        } ‡∏õ‡∏µ ${
                            today.getFullYear()
                        }`,
                        color: 0x00ffff
                    })
                ]})
            } catch (e) {
                client.function.main.error_log(e, client, message)
            }
        }
    },
    {
        name: "loo",
        category: "basic",
        information: "‡πÅ‡∏õ‡∏•‡∏†‡∏≤‡∏©‡∏≤‡πÑ‡∏ó‡∏¢‡πÑ‡∏õ‡∏†‡∏≤‡∏©‡∏≤‡∏•‡∏π (555+)",
        async run(client, message, args) {
            try {
                if (!args[0]) return message.loading.edit({embeds:[
                    new MessageEmbed({
                        author: {
                            icon_url: client.user.avatarURL(),
                            name: "‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£‡πÑ‡∏î‡πâ‡∏Ñ‡πà‡∏∞!",
                            url: client.config.embed_author_url
                        },
                        title: "‡πÇ‡∏õ‡∏£‡∏î‡∏£‡∏∞‡∏ö‡∏∏‡∏Ñ‡∏≥‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏à‡∏∞‡πÉ‡∏´‡πâ‡πÅ‡∏õ‡∏•‡∏î‡πâ‡∏ß‡∏¢‡∏ô‡∏∞‡∏Ñ‡∏∞",
                        description: `‡πÄ‡∏ä‡πà‡∏ô \`${await client.function.main.get_prefix(client, message)}loo ‡∏´‡∏•‡∏±‡∏ö\``,
                        color: 0x00ffff
                    })
                ]})
                const res = await client.function.api.loo_translate(client, args.join(" "), "thai2loo")
                message.loading.edit({embeds:[
                    new MessageEmbed({
                        author: {
                            icon_url: client.user.avatarURL(),
                            name: "thai2loo | " + args[0],
                            url: "http://lootranslator.infinityfreeapp.com/lootranslator.php"
                        },
                        title: res.data,
                        url: `http://lootranslator.infinityfreeapp.com/lootranslator.php?text=${args[0]}&mode=thai2loo`,
                        footer: {
                            text: "API response : " + res.ms.toLocaleString() + " ms"
                        },
                        color: 0x00ffff
                    })
                ]})
            } catch (e) {
                client.function.main.error_log(e, client, message)
            }
        }
    },
    {
        name: "tloo",
        category: "basic",
        information: "‡πÅ‡∏õ‡∏•‡∏†‡∏≤‡∏©‡∏≤‡∏•‡∏π‡∏°‡∏≤‡∏†‡∏≤‡∏©‡∏≤‡πÑ‡∏ó‡∏¢",
        async run(client, message, args) {
            try {
                if (!args[0]) return message.loading.edit({embeds:[
                    new MessageEmbed({
                        author: {
                            icon_url: client.user.avatarURL(),
                            name: "‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£‡πÑ‡∏î‡πâ‡∏Ñ‡πà‡∏∞!",
                            url: client.config.embed_author_url
                        },
                        title: "‡πÇ‡∏õ‡∏£‡∏î‡∏£‡∏∞‡∏ö‡∏∏‡∏Ñ‡∏≥‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏à‡∏∞‡πÉ‡∏´‡πâ‡πÅ‡∏õ‡∏•‡∏î‡πâ‡∏ß‡∏¢‡∏ô‡∏∞‡∏Ñ‡∏∞",
                        description: `‡πÄ‡∏ä‡πà‡∏ô \`${await client.function.main.get_prefix(client, message)}tloo ‡∏™‡∏±‡∏ö‡∏´‡∏•‡∏∏‡∏ö\``,
                        color: 0x00ffff
                    })
                ]})
                const res = await client.function.api.loo_translate(client, args.join(" "), "loo2thai")
                message.loading.edit({embeds:[
                    new MessageEmbed({
                        author: {
                            icon_url: client.user.avatarURL(),
                            name: "loo2thai | " + args[0],
                            url: "http://lootranslator.infinityfreeapp.com/lootranslator.php"
                        },
                        title: res.data,
                        url: `http://lootranslator.infinityfreeapp.com/lootranslator.php?text=${args[0]}&mode=loo2thai`,
                        footer: {
                            text: "API response : " + res.ms.toLocaleString() + " ms"
                        },
                        color: 0x00ffff
                    })
                ]})
            } catch (e) {
                client.function.main.error_log(e, client, message)
            }
        }
    },
    {
        name: "rank",
        category: "basic",
        information: "‡∏î‡∏π‡∏ß‡πà‡∏≤‡∏Ñ‡∏∏‡∏ì‡∏≠‡∏¢‡∏π‡πà‡∏≠‡∏±‡∏ô‡∏î‡∏±‡∏ö‡∏ó‡∏µ‡πà‡πÄ‡∏ó‡πà‡∏≤‡πÑ‡∏´‡∏£‡πà‡∏Ç‡∏≠‡∏á‡∏î‡∏¥‡∏™",
        async run(client, message) {
            const this_guild_settings = await client.function.database.get_this_guild_settings(client, message.guildId)
            if (!this_guild_settings?.ranking_exp) return message.loading.edit({embeds:[
                new MessageEmbed({
                    author: {
                        icon_url: client.user.avatarURL(),
                        name: "‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£‡πÑ‡∏î‡πâ‡∏Ñ‡πà‡∏∞!",
                        url: client.config.embed_author_url
                    },
                    title: "‡∏î‡∏¥‡∏™‡∏ô‡∏µ‡πâ‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡πÄ‡∏õ‡∏¥‡∏î Ranking System ‡∏Ñ‡πà‡∏∞",
                    description: `‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏õ‡∏¥‡∏î‡πÑ‡∏î‡πâ‡πÇ‡∏î‡∏¢‡πÉ‡∏´‡πâ‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô‡∏î‡∏¥‡∏™\n‡πÉ‡∏ä‡πâ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á \`${await client.function.main.get_prefix(client, message)}rankingmode\` ‡πÑ‡∏î‡πâ‡πÄ‡∏•‡∏¢‡∏Ñ‡πà‡∏∞`,
                    color: 0x00ffff
                })
            ]})
            const data = JSON.parse(this_guild_settings.ranking_exp).sort((a, b) => a.score - b.score).reverse()
            const this_member = data.find(m => m.member_id === message.author.id) ? data.find(m => m.member_id === message.author.id) : { member_id: message.author.id, score: 10 } 
            message.loading.edit({embeds:[
                new MessageEmbed({
                    author: {
                        icon_url: message.author.avatarURL(),
                        name: message.author.tag
                    },
                    title: `Level ‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡πÉ‡∏ô‡∏ï‡∏≠‡∏ô‡∏ô‡∏µ‡πâ ‡∏Ñ‡∏∑‡∏≠ ${(this_member.score / 1000).toLocaleString()} | ${this_member.score.toLocaleString()} ‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô`,
                    description: `‡∏Ñ‡∏∏‡∏ì‡πÄ‡∏õ‡πá‡∏ô‡∏≠‡∏±‡∏ô‡∏î‡∏±‡∏ö‡∏ó‡∏µ‡πà ${data.includes(this_member) ? (data.indexOf(this_member) + 1).toLocaleString() : member.guild.memberCount.toLocaleString()} ‡∏Ç‡∏≠‡∏á‡∏î‡∏¥‡∏™`,
                    fields: [
                        {
                            name: `${message.guild.name} Level Ranking`,
                            value: data.slice(0, 14).map(m => `**${(data.indexOf(m) + 1).toLocaleString()})** *${(m.score / 1000).toLocaleString()}* | <@${m.member_id}>`).join("\n")
                        }
                    ],
                    color: 0x00ffff
                })
            ]})
        }
    }
]

function get_menu_random(client) {
    return new Promise((resolve, reject) => {
        client.datacore.query("SELECT * FROM `food`", (err, res) => {
            if (res.length > 0) {
                resolve(client.function.main.random_choice(res))
            } else {
                resolve({
                    menu: "‡∏Å‡∏£‡∏∞‡πÄ‡∏û‡∏£‡∏≤‡∏∞‡∏´‡∏°‡∏π‡∏Å‡∏£‡∏≠‡∏ö",
                    value: '[{url: "https://cdn.discordapp.com/attachments/850819315745947719/901123291421495316/97410838_711254099635380_4306379715595206656_n.png", source: "https://m.facebook.com/ReviewMaiYood/posts/711257319635058"}]'
                })
            }
        })
    })
}